service: kachuful-fe

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverlessUser
  region: eu-west-1

plugins:
  - serverless-s3-sync

custom:
  bucketName: thecardgames.net
  s3Sync:
    - bucketName: ${self:custom.bucketName}
      localDir: build/

resources:
  Resources:
    KachufulFe:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    S3AccessPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: KachufulFe
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.bucketName}/*
    WebsiteOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: "CloudFrontOriginAccessIdentity for ${self:service}"
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.bucketName}.s3.amazonaws.com
              Id: S3-${self:custom.bucketName}
              S3OriginConfig:
                OriginAccessIdentity:
                  {
                    "Fn::Join":
                      [
                        "",
                        [
                          "origin-access-identity/cloudfront/",
                          { Ref: WebsiteOriginAccessIdentity },
                        ],
                      ],
                  }
          Aliases:
            - thecardgames.net
          Enabled: "true"
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: S3-${self:custom.bucketName}
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            Compress: true
            ForwardedValues:
              QueryString: "false"
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          # CacheBehaviors:
          #   - PathPattern: index.html
          #     MaxTTL: 0
          #     DefaultTTL: 0
          #     TargetOriginId: S3-${self:custom.bucketName}
          #     ForwardedValues:
          #       QueryString: "false"
          #       Cookies:
          #         Forward: none
          #     ViewerProtocolPolicy: redirect-to-https
          #   - PathPattern: static/*
          #     TargetOriginId: S3-${self:custom.bucketName}
          #     ForwardedValues:
          #       QueryString: "false"
          #       Cookies:
          #         Forward: none
          #     ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: "arn:aws:acm:us-east-1:618246572188:certificate/ba729453-7e4f-44ee-838b-f13db7518ece"
            SslSupportMethod: "sni-only"
