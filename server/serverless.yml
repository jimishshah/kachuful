service: kachuful

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverlessUser
  region: eu-west-1
  environment:
    tableName: ${self:custom.tableName}
    IS_OFFLINE: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

custom:
  tableName: Kachuful
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

functions:
  websocket-connect:
    handler: lambdas/websockets/connect.handler
    events:
      - websocket:
          route: $connect
  websocket-disconnect:
    handler: lambdas/websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  websocket-default:
    handler: lambdas/websockets/default.handler
    events:
      - websocket:
          route: $default
  websocket-message:
    handler: lambdas/websockets/message.handler
    events:
      - websocket:
          route: message
  websocket-sendName:
    handler: lambdas/websockets/send-name.handler
    events:
      - websocket:
          route: sendName
  websocket-distributeCards:
    handler: lambdas/websockets/distribute-cards.handler
    events:
      - websocket:
          route: distributeCards
  websocket-bid-wins:
    handler: lambdas/websockets/bid-wins.handler
    events:
      - websocket:
          route: bidWins
  # websocket-message:
  #   handler: lambdas/websockets/throw-card.handler
  #   events:
  #     - websocket:
  #         route: throw-card
  # websocket-message:
  #   handler: lambdas/websockets/finish-round.handler
  #   events:
  #     - websocket:
  #         route: finish-round
  # websocket-message:
  #   handler: lambdas/websockets/finish-level.handler
  #   events:
  #     - websocket:
  #         route: finish-level

resources:
  Resources:
    WeboscketUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
  - serverless-dynamodb-local

package:
  exclude:
    - node_modules/**
    - .dynamodb/**
